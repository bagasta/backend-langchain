// database/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Users table mapped to `users`
model User {
  id            BigInt        @id @default(autoincrement())
  email         String        @unique
  name          String
  // Relations
  agents        Agent[]       @relation("UserToAgent")
  list_accounts ListAccount[] @relation("UserToListAccount")
  created_at    DateTime      @default(now()) @db.Timestamptz(6)
  updated_at    DateTime      @updatedAt @db.Timestamptz(6)

  @@map("users")
}

/// Agents table mapped to `agent`
model Agent {
  id             BigInt   @id @default(autoincrement())
  user_id        BigInt
  user           User     @relation("UserToAgent", fields: [user_id], references: [id], onDelete: Cascade)
  /// Model name (e.g., gpt-4o-mini)
  nama_model     String
  system_message String
  /// Tools stored as a string (e.g., JSON string). MVP design allows later normalization.
  tools          String
  /// Agent type string (may be normalized later)
  agent_type     String
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  updated_at     DateTime @updatedAt @db.Timestamptz(6)

  list_accounts ListAccount[] @relation("AgentToListAccount")

  @@index([user_id], name: "idx_agent_user_id")
  @@map("agent")
}

/// OAuth token store per agent (Google tokens etc.) mapped to `list_account`
model ListAccount {
  id              BigInt   @id @default(autoincrement())
  user_id         BigInt
  agent_id        BigInt
  email           String
  servicesaccount Json     @db.JsonB
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  updated_at      DateTime @updatedAt @db.Timestamptz(6)

  user  User  @relation("UserToListAccount", fields: [user_id], references: [id], onDelete: Cascade)
  agent Agent @relation("AgentToListAccount", fields: [agent_id], references: [id], onDelete: Cascade)

  @@unique([user_id, agent_id, email], name: "uq_list_account_user_agent_email")
  @@index([user_id], name: "idx_list_account_user_id")
  @@index([agent_id], name: "idx_list_account_agent_id")
  @@map("list_account")
}
